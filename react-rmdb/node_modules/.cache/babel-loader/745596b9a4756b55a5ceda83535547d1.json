{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';//config\nimport{IMAGE_BASE_URL,POSTER_SIZE}from'../config';//components\nimport BreadCrumb from'./BreadCrumb';import Grid from'./Grid';import Spinner from'./Spinner';import MovieInfo from'./MovieInfo';import MovieInfoBar from'./MovieInfoBar';import Actor from'./Actor';//hook\nimport{useMovieFetch}from'../hooks/useMovieFetch';//image\nimport NoImage from'../images/no_image.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Movie=function Movie(){var _useParams=useParams(),movieId=_useParams.movieId;var _useMovieFetch=useMovieFetch(movieId),movie=_useMovieFetch.state,loading=_useMovieFetch.loading,error=_useMovieFetch.error;if(loading)return/*#__PURE__*/_jsx(Spinner,{});if(error)return/*#__PURE__*/_jsx(\"div\",{children:\"Something went wrong...\"});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumb,{movieTitle:movie.original_title}),/*#__PURE__*/_jsx(MovieInfo,{movie:movie}),/*#__PURE__*/_jsx(MovieInfoBar,{time:movie.runtime,budget:movie.budget,revenue:movie.revenue}),/*#__PURE__*/_jsx(Grid,{header:\"Actor\",children:movie.actors.map(function(actor){return/*#__PURE__*/_jsx(Actor,{name:actor.name,character:actor.character,imageUrl:actor.profile_path?\"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(actor.profile_path):NoImage},actor.credit_id);})})]});};export default Movie;","map":{"version":3,"sources":["D:/Documents/Desktop/App/react-rmdb/src/components/Movie.js"],"names":["React","useParams","IMAGE_BASE_URL","POSTER_SIZE","BreadCrumb","Grid","Spinner","MovieInfo","MovieInfoBar","Actor","useMovieFetch","NoImage","Movie","movieId","movie","state","loading","error","original_title","runtime","budget","revenue","actors","map","actor","name","character","profile_path","credit_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA;AACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,WAA5C,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA;AACA,OAASC,aAAT,KAA8B,wBAA9B,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,6IAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,eAAkBX,SAAS,EAA3B,CAAOY,OAAP,YAAOA,OAAP,CAEA,mBAAuCH,aAAa,CAACG,OAAD,CAApD,CAAcC,KAAd,gBAAOC,KAAP,CAAqBC,OAArB,gBAAqBA,OAArB,CAA8BC,KAA9B,gBAA8BA,KAA9B,CAEA,GAAGD,OAAH,CAAY,mBAAO,KAAC,OAAD,IAAP,CACZ,GAAGC,KAAH,CAAU,mBAAO,gDAAP,CAEV,mBACI,wCACI,KAAC,UAAD,EAAY,UAAU,CAAEH,KAAK,CAACI,cAA9B,EADJ,cAEI,KAAC,SAAD,EAAW,KAAK,CAAEJ,KAAlB,EAFJ,cAGI,KAAC,YAAD,EACI,IAAI,CAAEA,KAAK,CAACK,OADhB,CAEI,MAAM,CAAEL,KAAK,CAACM,MAFlB,CAGI,OAAO,CAAEN,KAAK,CAACO,OAHnB,EAHJ,cAQI,KAAC,IAAD,EAAM,MAAM,CAAE,OAAd,UACKP,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,qBACnB,KAAC,KAAD,EAEI,IAAI,CAAEA,KAAK,CAACC,IAFhB,CAGI,SAAS,CAAED,KAAK,CAACE,SAHrB,CAII,QAAQ,CACJF,KAAK,CAACG,YAAN,WACKzB,cADL,SACsBC,WADtB,SACoCqB,KAAK,CAACG,YAD1C,EAEEhB,OAPV,EACSa,KAAK,CAACI,SADf,CADmB,EAAtB,CADL,EARJ,GADJ,CAyBH,CAjCD,CAmCA,cAAehB,CAAAA,KAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n//components\r\nimport BreadCrumb from './BreadCrumb';\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n//hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n//image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n    const {movieId} = useParams();\r\n\r\n    const {state: movie, loading, error} = useMovieFetch(movieId);\r\n\r\n    if(loading) return <Spinner />\r\n    if(error) return <div>Something went wrong...</div>\r\n    \r\n    return (\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}\r\n            />\r\n            <Grid header ='Actor'>\r\n                {movie.actors.map(actor =>(\r\n                    <Actor\r\n                        key={actor.credit_id}\r\n                        name={actor.name}\r\n                        character={actor.character}\r\n                        imageUrl={\r\n                            actor.profile_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                        }\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}