{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Downloads\\\\react-rmdb-v3-starter-files-master\\\\react-rmdb-v3-starter-files-master\\\\3. Project to start from - WITH Styles\\\\react-rmdb-START-HERE\\\\src\\\\components\\\\SearchBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types'; //images\n\nimport searchIcon from \"../../images/search-icon.svg\"; //styles\n\nimport { Wrapper, Content } from './SearchBar.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setSearchTerm\n}) => {\n  _s();\n\n  const [state, setState] = useState('');\n  const initial = useRef(true);\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchIcon,\n        alt: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search Movie\",\n        onChange: event => setState(event.currentTarget.value),\n        value: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"j4nMfssbIXgIaLQ7f2o61Ed7/hg=\");\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["D:/Documents/Downloads/react-rmdb-v3-starter-files-master/react-rmdb-v3-starter-files-master/3. Project to start from - WITH Styles/react-rmdb-START-HERE/src/components/SearchBar/index.js"],"names":["react","useState","useEffect","useRef","PropTypes","Wrapper","Content","SearchBar","setSearchTerm","state","setState","initial","current","timer","setTimeout","clearTimeout","searchIcon","event","currentTarget","value","propTypes","callback","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;uDAEA;;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,oBAAjC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,OAAO,CAACC,OAAX,EAAmB;AACfD,MAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACH;;AAED,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BN,MAAAA,aAAa,CAACC,KAAD,CAAb;AACH,KAFuB,EAErB,GAFqB,CAAxB;AAIA,WAAO,MAAMM,YAAY,CAACF,KAAD,CAAzB;AACH,GAXQ,EAWP,CAACL,aAAD,EAAgBC,KAAhB,CAXO,CAAT;AAaA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,OAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEO,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,cAFhB;AAGI,QAAA,QAAQ,EAAEC,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAH/B;AAII,QAAA,KAAK,EAAEV;AAJX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9BD;;GAAMF,S;;KAAAA,S;AAgCNA,SAAS,CAACa,SAAV,GAAqB;AACjBC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB;AADH,CAArB;AAIA,eAAef,SAAf","sourcesContent":["import react, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//images\r\nimport searchIcon from '../../images/search-icon.svg';\r\n//styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm}) => {\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n    },[setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon' />\r\n                <input \r\n                    type='text' \r\n                    placeholder='search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes ={\r\n    callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}