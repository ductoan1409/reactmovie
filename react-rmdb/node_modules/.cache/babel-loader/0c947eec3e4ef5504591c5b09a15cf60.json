{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react'; //API\n\nimport API from '../API'; //Helpers\n\nimport { isPersistedState } from '../helpers';\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      console.log(movies);\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }; //Search and initial\n\n\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState('homeState');\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      }\n    }\n\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]); //Load More\n\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [setIsLoadingMore, searchTerm, state.page]);\n  return {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  };\n};\n\n_s(useHomeFetch, \"/ZtjXkYhsylOvdJKmq7D1mhW5Bo=\");","map":{"version":3,"sources":["D:/Documents/Downloads/react-rmdb-v3-starter-files-master/react-rmdb-v3-starter-files-master/3. Project to start from - WITH Styles/react-rmdb-START-HERE/src/hooks/useHomeFetch.js"],"names":["useState","useEffect","useRef","API","isPersistedState","initialState","page","results","total_pages","total_results","useHomeFetch","searchTerm","setSearchTerm","state","setState","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","fetchMovies","movies","console","log","prev","sessionState"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACK,YAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMqB,WAAW,GAAG,OAAOf,IAAP,EAAaK,UAAU,GAAG,EAA1B,KAAiC;AACjD,QAAI;AACAO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMM,MAAM,GAAG,MAAMnB,GAAG,CAACkB,WAAJ,CAAgBV,UAAhB,EAA4BL,IAA5B,CAArB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAR,MAAAA,QAAQ,CAACW,IAAI,KAAK,EACd,GAAGH,MADW;AAEdf,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGmB,IAAI,CAAClB,OAAT,EAAkB,GAAGe,MAAM,CAACf,OAA5B,CAAX,GAAkD,CAAC,GAAGe,MAAM,CAACf,OAAX;AAHxC,OAAL,CAAL,CAAR;AAKH,KAXD,CAWE,OAAOU,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAhBD,CAP8B,CAyB9B;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACU,UAAJ,EAAe;AACX,YAAMe,YAAY,GAAGtB,gBAAgB,CAAC,WAAD,CAArC;;AAEA,UAAGsB,YAAH,EAAgB;AACZZ,QAAAA,QAAQ,CAACY,YAAD,CAAR;AACA;AACH;AACJ;;AAEDZ,IAAAA,QAAQ,CAACT,YAAD,CAAR;AACAgB,IAAAA,WAAW,CAAC,CAAD,EAAIV,UAAJ,CAAX;AACH,GAZQ,EAYP,CAACA,UAAD,CAZO,CAAT,CA1B8B,CAwC9B;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACkB,aAAJ,EAAmB;AAEnBE,IAAAA,WAAW,CAACR,KAAK,CAACP,IAAN,GAAY,CAAb,EAAgBK,UAAhB,CAAX;AACAS,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GALQ,EAKP,CAACA,gBAAD,EAAmBT,UAAnB,EAA+BE,KAAK,CAACP,IAArC,CALO,CAAT;AAOA,SAAO;AAACO,IAAAA,KAAD;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA,KAAjB;AAAwBN,IAAAA,UAAxB;AAAoCC,IAAAA,aAApC;AAAmDQ,IAAAA;AAAnD,GAAP;AACH,CAjDM;;GAAMV,Y","sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n//API\r\nimport API from '../API';\r\n//Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n        try {\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            console.log(movies);\r\n            setState(prev => ({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }));\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    //Search and initial\r\n    useEffect(() => {\r\n        if(!searchTerm){\r\n            const sessionState = isPersistedState('homeState');\r\n\r\n            if(sessionState){\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        }\r\n\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n    },[searchTerm]);\r\n\r\n    //Load More\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page +1, searchTerm);\r\n        setIsLoadingMore(false);\r\n    },[setIsLoadingMore, searchTerm, state.page]);\r\n\r\n    return {state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n}"]},"metadata":{},"sourceType":"module"}