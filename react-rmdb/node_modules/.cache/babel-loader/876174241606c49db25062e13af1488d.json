{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Desktop\\\\App\\\\react-rmdb\\\\src\\\\components\\\\MovieInfo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types'; //Components\n\nimport Thumb from '../Thumb';\nimport Rate from '../Rate'; //Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'; //Image\n\nimport NoImage from '../../images/no_image.jpg'; //Styles\n\nimport { Wrapper, Content, Text } from './MovieInfo.styles'; //Context\n\nimport { Context } from '../../context';\nimport API from '../../API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInfo = ({\n  movie\n}) => {\n  _s();\n\n  const [user] = useContext(Context);\n\n  const handleRating = async value => {\n    const rate = await API.rateMovie(user.sessionId, movie.id, value);\n    console.log(rate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    backdrop: movie.backdrop_path,\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Thumb, {\n        image: movie.backdrop_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n        clickable: false,\n        alt: \"movie-thumb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PLOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-directors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"RATING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: movie.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"director\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"DIRECTOR\", movie.directors.length > 1 ? 'S' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), movie.directors.map(director => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: director.name\n            }, director.credit_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Rate Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Rate, {\n            callback: handleRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieInfo, \"cIQXSn1fQGlDunUqhLB8HGDfGG8=\");\n\n_c = MovieInfo;\nMovieInfo.propTypes = {\n  movie: PropTypes.object\n};\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["D:/Documents/Desktop/App/react-rmdb/src/components/MovieInfo/index.js"],"names":["React","useContext","PropTypes","Thumb","Rate","IMAGE_BASE_URL","POSTER_SIZE","NoImage","Wrapper","Content","Text","Context","API","MovieInfo","movie","user","handleRating","value","rate","rateMovie","sessionId","id","console","log","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","director","name","credit_id","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Components\r\nimport Thumb from '../Thumb';\r\nimport Rate from '../Rate';\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n//Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n//Context\r\nimport { Context } from '../../context';\r\nimport API from '../../API';\r\n\r\nconst MovieInfo = ({movie}) => {\r\n    const [user] = useContext(Context);\r\n\r\n    const handleRating = async value =>{\r\n        const rate= await API.rateMovie(user.sessionId, movie.id, value);\r\n        console.log(rate);\r\n    };\r\n\r\n    return(\r\n        <Wrapper backdrop = {movie.backdrop_path}>\r\n            <Content>\r\n                <Thumb \r\n                    image = {\r\n                        movie.backdrop_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                        : NoImage\r\n                    }\r\n                    clickable = {false}\r\n                    alt='movie-thumb'\r\n                />\r\n                <Text>\r\n                    <h1>{movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{movie.overview}</p>\r\n\r\n                    <div className=\"rating-directors\">\r\n                        <div>\r\n                            <h3>RATING</h3>\r\n                            <div className=\"score\">{movie.vote_average}</div>\r\n                        </div>\r\n                        <div className=\"director\">\r\n                            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                            {movie.directors.map(director => (\r\n                                <p key={director.credit_id}>{director.name}</p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {user && (\r\n                        <div>\r\n                            <p>Rate Movie</p>\r\n                            <Rate callback={handleRating} />\r\n                        </div>\r\n                    )}\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\nMovieInfo.propTypes ={\r\n    movie: PropTypes.object\r\n};\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}