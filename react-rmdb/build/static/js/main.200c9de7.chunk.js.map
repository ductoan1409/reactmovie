{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","context.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Header","useContext","user","console","log","to","src","RMDBLogo","alt","username","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","props","image","Text","HeroImage","title","text","Grid","header","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","Rate","setValue","min","max","e","backdrop","MovieInfo","handleRating","rate","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","Login","setUsername","setPassword","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.200c9de7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n  color: var(--white);\n\n  a{\n    color: var(--white);\n    text-decoration: none;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React, {useState, createContext} from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst UserProvider=({children}) => {\r\n    const [state, setState] = useState(undefined);\r\n\r\n    return(\r\n        <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n    );\r\n};\r\n\r\nexport default UserProvider;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n//Context\r\nimport { Context } from '../../context';\r\nconst Header = () => {\r\n    const [user] = useContext(Context);\r\n    console.log(user);\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n            <Link to='/'>\r\n                <LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n            </Link>\r\n            {user ? (\r\n                <span>Logged in as: {user.username}</span>\r\n            ):(\r\n                <Link to='/login'>\r\n                    <span>Log in</span>\r\n                </Link>\r\n            )}\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), var(--darkGrey)`};\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n  \n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({image, title, text}) => (\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes ={\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n};\r\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//styles\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n);\r\n\r\nGrid.propTypes ={\r\n    header: PropTypes.string\r\n};\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateMovieThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateMovieThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n//styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable}) => (\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb' />\r\n            </Link>\r\n        ) : (\r\n            <Image src={image} alt='movie-thumb' />\r\n        )} \r\n    </div>\r\n);\r\n\r\nThumb.propTypes ={\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n};\r\n\r\nexport default Thumb;","import { Spinner } from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey); \n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: (--fontBig);\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//images\r\nimport searchIcon from '../../images/search-icon.svg';\r\n//styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n    },[setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon' />\r\n                <input \r\n                    type='text' \r\n                    placeholder='search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes ={\r\n    callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback }) => (\r\n    <Wrapper type=\"button\" onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n);\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n};\r\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};","import { useState, useEffect } from 'react';\r\n//API\r\nimport API from '../API';\r\n//Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n        try {\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            console.log(movies);\r\n            setState(prev => ({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }));\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    //Initial render\r\n    useEffect(() => {\r\n        fetchMovies(1);\r\n    },[]);\r\n\r\n    //Search and initial\r\n    useEffect(() => {\r\n        if(!searchTerm){\r\n            const sessionState = isPersistedState('homeState');\r\n\r\n            if(sessionState){\r\n                console.log('Grabbing from sessionStorage')\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        }\r\n        console.log('Grabbing from API');\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n    },[searchTerm]);\r\n\r\n    //Load More\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page +1, searchTerm);\r\n        setIsLoadingMore(false);\r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    //Write to sessionStorage\r\n    useEffect(() => {\r\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\r\n    },[])\r\n\r\n    return {state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n//Components\r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n\r\n//Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch';\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n    const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\r\n    \r\n    console.log(state);\r\n\r\n    if(error) return <div>Something went wrong...</div>\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0] ? (\r\n                <HeroImage\r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                title={state.results[0].original_title}\r\n                text={state.results[0].overview}\r\n            />\r\n            ) : null}\r\n            <SearchBar setSearchTerm={setSearchTerm} />\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n                {state.results.map(movie => (\r\n                    <Thumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path\r\n                            ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                            : NoImage\r\n                        }\r\n                        movieId = {movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && <Spinner />}\r\n            {state.page < state.total_pages && !loading && (\r\n                <Button text ='Load More' callback={() => setIsLoadingMore(true)} />\r\n            )}   \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: 1.2rem;\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 16px;\n    }\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n//Styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({movieTitle}) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <span>Home</span>\r\n            </Link>\r\n            <span>|</span>\r\n            <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n    movieTitle: PropTypes.string\r\n};\r\nexport default BreadCrumb;","import React, {useState} from 'react';\r\n\r\nconst Rate = ({callback}) => {\r\n    const [value, setValue] = useState(5);\r\n\r\n    return(\r\n        <div>\r\n            <input\r\n                type='range'\r\n                min='1'\r\n                max='10'\r\n                value={value}\r\n                onChange={e => setValue(e.currentTarget.value)}\r\n            />\r\n            {value}\r\n            <p>\r\n                <button onClick={() => callback(value)}>Rate</button>\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rate;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieinfo 1s;\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: 1280px;\n\n  margin: 0 auto;\n  background: rgb(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React, { useContext } from 'react';\r\nimport API from '../../API';\r\nimport PropTypes from 'prop-types';\r\n//Components\r\nimport Thumb from '../Thumb';\r\nimport Rate from '../Rate';\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n//Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n//Context\r\nimport { Context } from '../../context';\r\n\r\nconst MovieInfo = ({movie}) => {\r\n    const [user] = useContext(Context);\r\n\r\n    const handleRating = async value =>{\r\n        const rate = await API.rateMovie(user.sessionId, movie.id, value);\r\n        console.log(rate);\r\n    };\r\n\r\n    return(\r\n        <Wrapper backdrop = {movie.backdrop_path}>\r\n            <Content>\r\n                <Thumb \r\n                    image = {\r\n                        movie.backdrop_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                        : NoImage\r\n                    }\r\n                    clickable = {false}\r\n                    alt='movie-thumb'\r\n                />\r\n                <Text>\r\n                    <h1>{movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{movie.overview}</p>\r\n\r\n                    <div className=\"rating-directors\">\r\n                        <div>\r\n                            <h3>RATING</h3>\r\n                            <div className=\"score\">{movie.vote_average}</div>\r\n                        </div>\r\n                        <div className=\"director\">\r\n                            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                            {movie.directors.map(director => (\r\n                                <p key={director.credit_id}>{director.name}</p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {user && (\r\n                        <div>\r\n                            <p>Rate Movie</p>\r\n                            <Rate callback={handleRating} />\r\n                        </div>\r\n                    )}\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\nMovieInfo.propTypes ={\r\n    movie: PropTypes.object\r\n};\r\n\r\nexport default MovieInfo;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//helpers\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n//styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar = ({time, budget, revenue}) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <div className ='column'>\r\n                <p>Running Time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className ='column'>\r\n                <p>Budget: {convertMoney(budget)}</p>\r\n            </div>\r\n            <div className ='column'>\r\n                <p>Revenue: {convertMoney(revenue)}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes ={\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n};\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//styles\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor =({name, character, imageUrl}) => (\r\n    <Wrapper>\r\n        <Image src={imageUrl} alt='actor-thumb' />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n);\r\n\r\nActor.propTypes ={\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string\r\n};\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n//components\r\nimport BreadCrumb from './BreadCrumb';\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n//hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n//image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n    const {movieId} = useParams();\r\n\r\n    const {state: movie, loading, error} = useMovieFetch(movieId);\r\n\r\n    if(loading) return <Spinner />\r\n    if(error) return <div>Something went wrong...</div>\r\n    \r\n    return (\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}\r\n            />\r\n            <Grid header ='Actor'>\r\n                {movie.actors.map(actor =>(\r\n                    <Actor\r\n                        key={actor.credit_id}\r\n                        name={actor.name}\r\n                        character={actor.character}\r\n                        imageUrl={\r\n                            actor.profile_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                        }\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;","import { useState, useEffect } from 'react';\r\nimport API from '../API';\r\n//Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect (() => {\r\n        const fetchMovie = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //Get directors only\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === \"Director\"\r\n                );\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors \r\n                });\r\n\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        };\r\n\r\n        const sessionState = isPersistedState(movieId);\r\n\r\n        if(sessionState){\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        fetchMovie();\r\n    }, [movieId]);\r\n\r\n    //Write to sessionStorage\r\n    useEffect(() => {\r\n        sessionStorage.setItem(movieId, JSON.stringify(state));\r\n    }, [movieId, state]);\r\n\r\n    return{state, loading, error};\r\n} ","import React from 'react';\r\n\r\nconst NotFound = () => <div>NotFound</div>;\r\n\r\nexport default NotFound;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  color: var(--darkGrey);\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 30px;\r\n    border: 1px solid var(--darkGrey);\r\n    border-radius: 20px;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n\r\n  .error {\r\n    color: red;\r\n  }\r\n`;\r\n","import React, {useState, useContext} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../API';\r\n//Components\r\nimport Button from './Button';\r\n//Styles\r\nimport { Wrapper } from './Login.styles';\r\n//Context\r\nimport {Context} from '../context';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername]=useState('');\r\n    const [password, setPassword]=useState('');\r\n    const [error, setError]=useState(false);\r\n\r\n    const [_user, setUser] = useContext(Context);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async () => {\r\n        setError(false);\r\n        try {\r\n            const requestToken = await API.getRequestToken();\r\n            const sessionId = await API.authenticate(\r\n                requestToken,\r\n                username,\r\n                password\r\n            );\r\n            console.log(sessionId);\r\n            setUser({ sessionId: sessionId.session_id, username});\r\n\r\n            navigate('/');\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const handleInput = e => {\r\n        const name = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n\r\n        if(name === 'username') setUsername(value);\r\n        if(name === 'password') setPassword(value);\r\n    };\r\n    \r\n    return(\r\n        <Wrapper>\r\n            {error && <div className='error'>There was an error!</div>}\r\n            <label>Username:</label>\r\n            <input\r\n                type='text'\r\n                value={username}\r\n                name='username'\r\n                onChange={handleInput}\r\n            />\r\n            <input\r\n                type='password'\r\n                value={password}\r\n                name='password'\r\n                onChange={handleInput}\r\n            />\r\n            <Button text='Login' callback={handleSubmit} />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Login;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n//Routing\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\n//Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\nimport Login from './components/Login';\n//Context\nimport UserProvider from './context';\n\n//Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n  <Router>\n    <UserProvider>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/:movieId' element={<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n      </UserProvider>\n  </Router>\n  );\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}